{# templates/Callendar/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block body %}
<div class="all">
<aside class="left">
    <h2>Collaborateurs</h2>
    {% for user in users %}
        <div class="user-list" style="background-color :{{user.color}};">
            {{user.Lastname}}
        </div>    
    {% endfor %}
    {% if is_granted ('ROLE_ADMIN') %}
         <a href="{{path('admin.users.create')}}" class='button btn-seconaire'>Ajouter</a>
    {% endif %}
    
   
</aside>

    <div id='calendrier'>

    <a href="{{path('admin.event.create')}}" class='button btn-principal'>Ajouter</a>
    </div>

    <script>
    window.onload = () => {
        let calendarElt = document.querySelector("#calendrier");

        let calendar = new FullCalendar.Calendar(calendarElt, {
            themeSystem: 'bootstrap5',
            initialView: 'dayGridMonth',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek,listWeek' 
            },
            views: {
                timeGridWeek: {
                    titleFormat: { week: 'Semaine {weekNumber}' }
                }
            },
            events: {{data|raw}},
            selectConstraint: {
                start: new Date(), // La date actuelle
                message: 'Impossible de sélectionner une date passée' // Message d'erreur affiché à l'utilisateur
            },
            editable: true, // Activer le glisser-déposer
            eventDrop: function(info) {
                // Action à effectuer lorsqu'un événement est déplacé
                console.log('Événement déplacé:', info.event);
                // Vous pouvez ajouter ici la logique pour enregistrer le déplacement de l'événement sur le serveur
            }
        });
        
        calendar.render();
    }
</script>

    <div class="excel">
    <h2>Générer le fichier Excel des déplacements</h2>
    
   <form id="excelForm" action="{{ path('planning_generate') }}" method="post">
    {% if events is not empty %}
        <div>
            <label for="client">Client :</label>
            <select id="client" name="client_id" required>
                {% for client in clients %}
                    <option value="{{ client.id }}">{{ client.name }}</option>
                {% endfor %}
            </select>
        </div>
        <div>
            <label for="start_date">Date de début :</label>
            <input type="date" id="start_date" name="start_date" required>
        </div>
        <div>
            <label for="end_date">Date de fin :</label>
            <input type="date" id="end_date" name="end_date" required>
        </div>
        <div>
            <button id="submitBtn" type="submit">Générer le fichier Excel</button>
        </div>
    {% else %}
        <p>Aucun événement disponible pour le moment. Impossible de générer le fichier Excel.</p>
    {% endif %}
    </div>
</div>
</form>

<script>
    document.getElementById('excelForm').addEventListener('submit', function(event) {
        var clientSelected = document.getElementById('client').value;
        var startDate = document.getElementById('start_date').value;
        var endDate = document.getElementById('end_date').value;

        if (!clientSelected || !startDate || !endDate) {
            event.preventDefault(); // Empêcher la soumission du formulaire si des champs sont vides
            alert("Veuillez sélectionner un client et spécifier les dates de début et de fin.");
        }
    });
    
</script>

</script>

{% endblock %}
